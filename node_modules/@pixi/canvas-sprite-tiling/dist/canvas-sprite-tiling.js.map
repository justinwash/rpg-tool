{"version":3,"file":"canvas-sprite-tiling.js","sources":["../src/TilingSprite.ts"],"sourcesContent":["import { TilingSprite } from '@pixi/sprite-tiling';\nimport { canvasUtils } from '@pixi/canvas-renderer';\nimport { CanvasRenderTarget } from '@pixi/utils';\n\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @protected\n * @function _renderCanvas\n * @memberof PIXI.TilingSprite#\n * @param {PIXI.CanvasRenderer} renderer - a reference to the canvas renderer\n */\nTilingSprite.prototype._renderCanvas = function _renderCanvas(renderer: CanvasRenderer): void\n{\n    const texture = this._texture;\n\n    if (!texture.baseTexture.valid)\n    {\n        return;\n    }\n\n    const context = renderer.context;\n    const transform = this.worldTransform;\n    const baseTexture = texture.baseTexture;\n    const source = baseTexture.getDrawableSource();\n    const baseTextureResolution = baseTexture.resolution;\n    const modX = ((this.tilePosition.x / this.tileScale.x) % texture._frame.width) * baseTextureResolution;\n    const modY = ((this.tilePosition.y / this.tileScale.y) % texture._frame.height) * baseTextureResolution;\n\n    // create a nice shiny pattern!\n    if (this._textureID !== this._texture._updateID || this._cachedTint !== this.tint)\n    {\n        this._textureID = this._texture._updateID;\n        // cut an object from a spritesheet..\n        const tempCanvas = new CanvasRenderTarget(texture._frame.width,\n            texture._frame.height,\n            baseTextureResolution);\n\n        // Tint the tiling sprite\n        if (this.tint !== 0xFFFFFF)\n        {\n            this._tintedCanvas = canvasUtils.getTintedCanvas(this, this.tint) as HTMLCanvasElement;\n            tempCanvas.context.drawImage(this._tintedCanvas, 0, 0);\n        }\n        else\n        {\n            tempCanvas.context.drawImage(source,\n                -texture._frame.x * baseTextureResolution, -texture._frame.y * baseTextureResolution);\n        }\n        this._cachedTint = this.tint;\n        this._canvasPattern = tempCanvas.context.createPattern(tempCanvas.canvas, 'repeat');\n    }\n\n    // set context state..\n    context.globalAlpha = this.worldAlpha;\n    renderer.setBlendMode(this.blendMode);\n    renderer.setContextTransform(transform);\n\n    // fill the pattern!\n    context.fillStyle = this._canvasPattern;\n\n    // TODO - this should be rolled into the setTransform above..\n    context.scale(this.tileScale.x / baseTextureResolution, this.tileScale.y / baseTextureResolution);\n\n    const anchorX = this.anchor.x * -this._width;\n    const anchorY = this.anchor.y * -this._height;\n\n    if (this.uvRespectAnchor)\n    {\n        context.translate(modX, modY);\n\n        context.fillRect(-modX + anchorX, -modY + anchorY,\n            this._width / this.tileScale.x * baseTextureResolution,\n            this._height / this.tileScale.y * baseTextureResolution);\n    }\n    else\n    {\n        context.translate(modX + anchorX, modY + anchorY);\n\n        context.fillRect(-modX, -modY,\n            this._width / this.tileScale.x * baseTextureResolution,\n            this._height / this.tileScale.y * baseTextureResolution);\n    }\n};\n"],"names":["TilingSprite","CanvasRenderTarget","canvasUtils"],"mappings":"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"}