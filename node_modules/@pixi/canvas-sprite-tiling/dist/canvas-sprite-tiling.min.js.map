{"version":3,"file":"canvas-sprite-tiling.min.js","sources":["../src/TilingSprite.ts"],"sourcesContent":["import { TilingSprite } from '@pixi/sprite-tiling';\nimport { canvasUtils } from '@pixi/canvas-renderer';\nimport { CanvasRenderTarget } from '@pixi/utils';\n\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @protected\n * @function _renderCanvas\n * @memberof PIXI.TilingSprite#\n * @param {PIXI.CanvasRenderer} renderer - a reference to the canvas renderer\n */\nTilingSprite.prototype._renderCanvas = function _renderCanvas(renderer: CanvasRenderer): void\n{\n    const texture = this._texture;\n\n    if (!texture.baseTexture.valid)\n    {\n        return;\n    }\n\n    const context = renderer.context;\n    const transform = this.worldTransform;\n    const baseTexture = texture.baseTexture;\n    const source = baseTexture.getDrawableSource();\n    const baseTextureResolution = baseTexture.resolution;\n    const modX = ((this.tilePosition.x / this.tileScale.x) % texture._frame.width) * baseTextureResolution;\n    const modY = ((this.tilePosition.y / this.tileScale.y) % texture._frame.height) * baseTextureResolution;\n\n    // create a nice shiny pattern!\n    if (this._textureID !== this._texture._updateID || this._cachedTint !== this.tint)\n    {\n        this._textureID = this._texture._updateID;\n        // cut an object from a spritesheet..\n        const tempCanvas = new CanvasRenderTarget(texture._frame.width,\n            texture._frame.height,\n            baseTextureResolution);\n\n        // Tint the tiling sprite\n        if (this.tint !== 0xFFFFFF)\n        {\n            this._tintedCanvas = canvasUtils.getTintedCanvas(this, this.tint) as HTMLCanvasElement;\n            tempCanvas.context.drawImage(this._tintedCanvas, 0, 0);\n        }\n        else\n        {\n            tempCanvas.context.drawImage(source,\n                -texture._frame.x * baseTextureResolution, -texture._frame.y * baseTextureResolution);\n        }\n        this._cachedTint = this.tint;\n        this._canvasPattern = tempCanvas.context.createPattern(tempCanvas.canvas, 'repeat');\n    }\n\n    // set context state..\n    context.globalAlpha = this.worldAlpha;\n    renderer.setBlendMode(this.blendMode);\n    renderer.setContextTransform(transform);\n\n    // fill the pattern!\n    context.fillStyle = this._canvasPattern;\n\n    // TODO - this should be rolled into the setTransform above..\n    context.scale(this.tileScale.x / baseTextureResolution, this.tileScale.y / baseTextureResolution);\n\n    const anchorX = this.anchor.x * -this._width;\n    const anchorY = this.anchor.y * -this._height;\n\n    if (this.uvRespectAnchor)\n    {\n        context.translate(modX, modY);\n\n        context.fillRect(-modX + anchorX, -modY + anchorY,\n            this._width / this.tileScale.x * baseTextureResolution,\n            this._height / this.tileScale.y * baseTextureResolution);\n    }\n    else\n    {\n        context.translate(modX + anchorX, modY + anchorY);\n\n        context.fillRect(-modX, -modY,\n            this._width / this.tileScale.x * baseTextureResolution,\n            this._height / this.tileScale.y * baseTextureResolution);\n    }\n};\n"],"names":["prototype","_renderCanvas","renderer","texture","this","_texture","baseTexture","valid","context","transform","worldTransform","source","getDrawableSource","baseTextureResolution","resolution","modX","tilePosition","x","tileScale","_frame","width","modY","y","height","_textureID","_updateID","_cachedTint","tint","tempCanvas","CanvasRenderTarget","_tintedCanvas","canvasUtils","getTintedCanvas","drawImage","_canvasPattern","createPattern","canvas","globalAlpha","worldAlpha","setBlendMode","blendMode","setContextTransform","fillStyle","scale","anchorX","anchor","_width","anchorY","_height","uvRespectAnchor","translate","fillRect"],"mappings":";;;;;;;oEAcaA,UAAUC,cAAgB,SAAuBC,GAE1D,IAAMC,EAAUC,KAAKC,SAErB,GAAKF,EAAQG,YAAYC,MAAzB,CAKA,IAAMC,EAAUN,EAASM,QACnBC,EAAYL,KAAKM,eACjBJ,EAAcH,EAAQG,YACtBK,EAASL,EAAYM,oBACrBC,EAAwBP,EAAYQ,WACpCC,EAASX,KAAKY,aAAaC,EAAIb,KAAKc,UAAUD,EAAKd,EAAQgB,OAAOC,MAASP,EAC3EQ,EAASjB,KAAKY,aAAaM,EAAIlB,KAAKc,UAAUI,EAAKnB,EAAQgB,OAAOI,OAAUV,EAGlF,GAAIT,KAAKoB,aAAepB,KAAKC,SAASoB,WAAarB,KAAKsB,cAAgBtB,KAAKuB,KAC7E,CACIvB,KAAKoB,WAAapB,KAAKC,SAASoB,UAEhC,IAAMG,EAAa,IAAIC,qBAAmB1B,EAAQgB,OAAOC,MACrDjB,EAAQgB,OAAOI,OACfV,GAGc,WAAdT,KAAKuB,MAELvB,KAAK0B,cAAgBC,cAAYC,gBAAgB5B,KAAMA,KAAKuB,MAC5DC,EAAWpB,QAAQyB,UAAU7B,KAAK0B,cAAe,EAAG,IAIpDF,EAAWpB,QAAQyB,UAAUtB,GACxBR,EAAQgB,OAAOF,EAAIJ,GAAwBV,EAAQgB,OAAOG,EAAIT,GAEvET,KAAKsB,YAActB,KAAKuB,KACxBvB,KAAK8B,eAAiBN,EAAWpB,QAAQ2B,cAAcP,EAAWQ,OAAQ,UAI9E5B,EAAQ6B,YAAcjC,KAAKkC,WAC3BpC,EAASqC,aAAanC,KAAKoC,WAC3BtC,EAASuC,oBAAoBhC,GAG7BD,EAAQkC,UAAYtC,KAAK8B,eAGzB1B,EAAQmC,MAAMvC,KAAKc,UAAUD,EAAIJ,EAAuBT,KAAKc,UAAUI,EAAIT,GAE3E,IAAM+B,EAAUxC,KAAKyC,OAAO5B,GAAKb,KAAK0C,OAChCC,EAAU3C,KAAKyC,OAAOvB,GAAKlB,KAAK4C,QAElC5C,KAAK6C,iBAELzC,EAAQ0C,UAAUnC,EAAMM,GAExBb,EAAQ2C,UAAUpC,EAAO6B,GAAUvB,EAAO0B,EACtC3C,KAAK0C,OAAS1C,KAAKc,UAAUD,EAAIJ,EACjCT,KAAK4C,QAAU5C,KAAKc,UAAUI,EAAIT,KAItCL,EAAQ0C,UAAUnC,EAAO6B,EAASvB,EAAO0B,GAEzCvC,EAAQ2C,UAAUpC,GAAOM,EACrBjB,KAAK0C,OAAS1C,KAAKc,UAAUD,EAAIJ,EACjCT,KAAK4C,QAAU5C,KAAKc,UAAUI,EAAIT"}