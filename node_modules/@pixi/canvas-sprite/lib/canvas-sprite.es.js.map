{"version":3,"file":"canvas-sprite.es.js","sources":["../src/CanvasSpriteRenderer.ts","../src/Sprite.ts"],"sourcesContent":["import { SCALE_MODES, BLEND_MODES } from '@pixi/constants';\nimport { Matrix, groupD8 } from '@pixi/math';\nimport { canvasUtils } from '@pixi/canvas-renderer';\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\nimport type { Sprite } from '@pixi/sprite';\n\nconst canvasRenderWorldTransform = new Matrix();\n\n/**\n * Types that can be passed to drawImage\n * @typedef {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap} ICanvasImageSource\n * @memberof PIXI\n */\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original PixiJS version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasSpriteRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/CanvasSpriteRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @protected\n * @memberof PIXI\n */\nexport class CanvasSpriteRenderer\n{\n    protected renderer: CanvasRenderer;\n\n    /**\n     * @param {PIXI.Renderer} renderer -The renderer sprite this batch works for.\n     */\n    constructor(renderer: CanvasRenderer)\n    {\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n    render(sprite: Sprite): void\n    {\n        const texture = sprite._texture;\n        const renderer = this.renderer;\n        const context = renderer.context;\n\n        const width = texture._frame.width;\n        const height = texture._frame.height;\n\n        let wt = sprite.transform.worldTransform;\n        let dx = 0;\n        let dy = 0;\n\n        const source = texture.baseTexture.getDrawableSource();\n\n        if (texture.orig.width <= 0 || texture.orig.height <= 0 || !texture.valid || !source)\n        {\n            return;\n        }\n\n        if (!texture.valid)\n        {\n            return;\n        }\n\n        renderer.setBlendMode(sprite.blendMode, true);\n\n        renderer.context.globalAlpha = sprite.worldAlpha;\n\n        // If smoothingEnabled is supported and we need to change the smoothing property for sprite texture\n        const smoothingEnabled = texture.baseTexture.scaleMode === SCALE_MODES.LINEAR;\n\n        if (renderer.smoothProperty\n            && renderer.context[renderer.smoothProperty] !== smoothingEnabled)\n        {\n            context[renderer.smoothProperty] = smoothingEnabled;\n        }\n\n        if (texture.trim)\n        {\n            dx = (texture.trim.width / 2) + texture.trim.x - (sprite.anchor.x * texture.orig.width);\n            dy = (texture.trim.height / 2) + texture.trim.y - (sprite.anchor.y * texture.orig.height);\n        }\n        else\n        {\n            dx = (0.5 - sprite.anchor.x) * texture.orig.width;\n            dy = (0.5 - sprite.anchor.y) * texture.orig.height;\n        }\n\n        if (texture.rotate)\n        {\n            wt.copyTo(canvasRenderWorldTransform);\n            wt = canvasRenderWorldTransform;\n            groupD8.matrixAppendRotationInv(wt, texture.rotate, dx, dy);\n            // the anchor has already been applied above, so lets set it to zero\n            dx = 0;\n            dy = 0;\n        }\n\n        dx -= width / 2;\n        dy -= height / 2;\n\n        renderer.setContextTransform(wt, sprite.roundPixels, 1);\n        // Allow for pixel rounding\n        if (sprite.roundPixels)\n        {\n            dx = dx | 0;\n            dy = dy | 0;\n        }\n\n        const resolution = texture.baseTexture.resolution;\n        const outerBlend = renderer._outerBlend;\n\n        if (outerBlend)\n        {\n            context.save();\n            context.beginPath();\n            context.rect(\n                dx * renderer.resolution,\n                dy * renderer.resolution,\n                width * renderer.resolution,\n                height * renderer.resolution\n            );\n            context.clip();\n        }\n\n        if (sprite.tint !== 0xFFFFFF)\n        {\n            if (sprite._cachedTint !== sprite.tint || sprite._tintedCanvas.tintId !== sprite._texture._updateID)\n            {\n                sprite._cachedTint = sprite.tint;\n\n                // TODO clean up caching - how to clean up the caches?\n                sprite._tintedCanvas = canvasUtils.getTintedCanvas(sprite, sprite.tint);\n            }\n\n            context.drawImage(\n                sprite._tintedCanvas,\n                0,\n                0,\n                Math.floor(width * resolution),\n                Math.floor(height * resolution),\n                Math.floor(dx * renderer.resolution),\n                Math.floor(dy * renderer.resolution),\n                Math.floor(width * renderer.resolution),\n                Math.floor(height * renderer.resolution)\n            );\n        }\n        else\n        {\n            context.drawImage(\n                source,\n                texture._frame.x * resolution,\n                texture._frame.y * resolution,\n                Math.floor(width * resolution),\n                Math.floor(height * resolution),\n                Math.floor(dx * renderer.resolution),\n                Math.floor(dy * renderer.resolution),\n                Math.floor(width * renderer.resolution),\n                Math.floor(height * renderer.resolution)\n            );\n        }\n\n        if (outerBlend)\n        {\n            context.restore();\n        }\n        // just in case, leaking outer blend here will be catastrophic!\n        renderer.setBlendMode(BLEND_MODES.NORMAL);\n    }\n\n    /**\n     * destroy the sprite object.\n     *\n     */\n    destroy(): void\n    {\n        this.renderer = null;\n    }\n}\n","import { Sprite } from '@pixi/sprite';\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\n/**\n * Cached tinted texture.\n * @memberof PIXI.Sprite#\n * @member {HTMLCanvasElement} _tintedCanvas\n * @protected\n */\nSprite.prototype._tintedCanvas = null;\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @private\n* @method _renderCanvas\n* @memberof PIXI.Sprite#\n* @param {PIXI.CanvasRenderer} renderer - The renderer\n*/\nSprite.prototype._renderCanvas = function _renderCanvas(renderer: CanvasRenderer): void\n{\n    renderer.plugins.sprite.render(this);\n};\n"],"names":[],"mappings":"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"}