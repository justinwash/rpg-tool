/*!
 * @pixi/canvas-sprite - v5.3.8
 * Compiled Sat, 20 Feb 2021 22:28:33 UTC
 *
 * @pixi/canvas-sprite is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
this.PIXI=this.PIXI||{};var _pixi_canvas_sprite=function(t,r,e,o,i){"use strict";var n=new e.Matrix,a=function(){function t(t){this.renderer=t}return t.prototype.render=function(t){var i=t._texture,a=this.renderer,s=a.context,l=i._frame.width,h=i._frame.height,d=t.transform.worldTransform,u=0,p=0,c=i.baseTexture.getDrawableSource();if(!(i.orig.width<=0||i.orig.height<=0)&&i.valid&&c&&i.valid){a.setBlendMode(t.blendMode,!0),a.context.globalAlpha=t.worldAlpha;var f=i.baseTexture.scaleMode===r.SCALE_MODES.LINEAR;a.smoothProperty&&a.context[a.smoothProperty]!==f&&(s[a.smoothProperty]=f),i.trim?(u=i.trim.width/2+i.trim.x-t.anchor.x*i.orig.width,p=i.trim.height/2+i.trim.y-t.anchor.y*i.orig.height):(u=(.5-t.anchor.x)*i.orig.width,p=(.5-t.anchor.y)*i.orig.height),i.rotate&&(d.copyTo(n),d=n,e.groupD8.matrixAppendRotationInv(d,i.rotate,u,p),u=0,p=0),u-=l/2,p-=h/2,a.setContextTransform(d,t.roundPixels,1),t.roundPixels&&(u|=0,p|=0);var _=i.baseTexture.resolution,g=a._outerBlend;g&&(s.save(),s.beginPath(),s.rect(u*a.resolution,p*a.resolution,l*a.resolution,h*a.resolution),s.clip()),16777215!==t.tint?(t._cachedTint===t.tint&&t._tintedCanvas.tintId===t._texture._updateID||(t._cachedTint=t.tint,t._tintedCanvas=o.canvasUtils.getTintedCanvas(t,t.tint)),s.drawImage(t._tintedCanvas,0,0,Math.floor(l*_),Math.floor(h*_),Math.floor(u*a.resolution),Math.floor(p*a.resolution),Math.floor(l*a.resolution),Math.floor(h*a.resolution))):s.drawImage(c,i._frame.x*_,i._frame.y*_,Math.floor(l*_),Math.floor(h*_),Math.floor(u*a.resolution),Math.floor(p*a.resolution),Math.floor(l*a.resolution),Math.floor(h*a.resolution)),g&&s.restore(),a.setBlendMode(r.BLEND_MODES.NORMAL)}},t.prototype.destroy=function(){this.renderer=null},t}();return i.Sprite.prototype._tintedCanvas=null,i.Sprite.prototype._renderCanvas=function(t){t.plugins.sprite.render(this)},t.CanvasSpriteRenderer=a,t}({},PIXI,PIXI,PIXI,PIXI);Object.assign(this.PIXI,_pixi_canvas_sprite);
//# sourceMappingURL=canvas-sprite.min.js.map
